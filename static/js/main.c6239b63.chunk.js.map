{"version":3,"sources":["Images/2.jpg","Images/3.jpg","Images/4.jpg","Images/1.jpg","WeatherContext.js","GeoLocation.js","WeatherForcast.js","Footer.js","App.js","index.js"],"names":["module","exports","WeatherContext","createContext","WeatherContextProvider","children","useState","APPID","LOCATION","TEMP_UNIT","APIState","setAPIState","IS_LOADING","ERROR","CITY","NATION","AVG_TEMP","WEATHER","WEATHER_ICON","PRESSURE","HUMIDITY","WIND_SPEED","WIND_DIR","fetchedDataState","setFetchedDataState","useEffect","Axios","get","then","raw_data","num","data","name","sys","country","main","temp","weather","icon","pressure","humidity","wind","speed","deg","Math","floor","catch","e","console","log","Provider","value","GeoLocation","useContext","UNIT","state","setState","className","onSubmit","preventDefault","type","placeholder","required","onChange","target","selectedOptions","defaultValue","WeatherForcast","src","alt","Footer","bgImg","round","random","i1","i2","i3","i4","App","style","backgroundImage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6239b63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/2.ff790241.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.8b239f69.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.9ae42ba4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/1.5209bce1.jpg\";","import React, { createContext, useState, useEffect } from 'react'\r\n\r\nimport Axios from 'axios'\r\n\r\nexport const WeatherContext = createContext()\r\n\r\nconst WeatherContextProvider = ({ children }) => {\r\n\r\n  const degToCompass = (num) => {\r\n    const val =  Math.floor((num / 45) + 0.5);\r\n    const arr = [\"N\",\"NE\",\"E\", \"SE\",\"S\",\"SW\",\"W\",\"NW\"];\r\n    return arr[(val % 8)]\r\n  }\r\n\r\n  const initAPIState = {\r\n    APPID: '0ce3eff54aefbfce2ef8944385a448bb',\r\n    LOCATION: 'Ajmer',\r\n    TEMP_UNIT: 'metric', // Default: Kelvin, metric: Celsius, imperial: Fahrenheit\r\n  }\r\n\r\n  const [APIState, setAPIState] = useState(initAPIState)\r\n\r\n  const initFetchedDataState = {\r\n    IS_LOADING: true,\r\n    ERROR: false,\r\n\r\n    CITY: null,\r\n    NATION: null,\r\n    AVG_TEMP: null,\r\n    WEATHER: null,\r\n    WEATHER_ICON: null,\r\n    PRESSURE: null,\r\n    HUMIDITY: null,\r\n    WIND_SPEED: null,\r\n    WIND_DIR: null\r\n  }\r\n\r\n  const [fetchedDataState, setFetchedDataState] = useState(initFetchedDataState)\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"https://api.openweathermap.org/data/2.5/weather?q=\"+ APIState.LOCATION +\"&APPID=\"+ APIState.APPID + \"&units=\" + APIState.TEMP_UNIT)\r\n      .then( (raw_data) => {\r\n        const data = raw_data.data\r\n\r\n        setFetchedDataState({\r\n          ...fetchedDataState,\r\n          IS_LOADING: false,\r\n          ERROR: false,\r\n\r\n          CITY: data.name,\r\n          NATION: data.sys.country,\r\n          AVG_TEMP: data.main.temp,\r\n          WEATHER: data.weather[0].main,\r\n          WEATHER_ICON: data.weather[0].icon,\r\n          PRESSURE: data.main.pressure,\r\n          HUMIDITY: data.main.humidity,\r\n          WIND_SPEED: data.wind.speed,\r\n          WIND_DIR: degToCompass(data.wind.deg)\r\n        })\r\n      })\r\n      .catch( (e) => {\r\n        console.log(e)\r\n        setFetchedDataState({\r\n          ...fetchedDataState,\r\n          ERROR: \"City not found!\"\r\n        })\r\n      })\r\n  }, [APIState])\r\n\r\n  return (\r\n    <WeatherContext.Provider value={ { APIState, setAPIState, fetchedDataState } }>\r\n      { children }\r\n    </WeatherContext.Provider>\r\n  )\r\n}\r\n\r\nexport default WeatherContextProvider\r\n\r\n","import React, { useContext, useState } from 'react'\r\n\r\nimport { WeatherContext } from './WeatherContext'\r\n\r\n// import CityList from './list.json'\r\n\r\nconst GeoLocation = () => {\r\n\r\n  const { APIState, setAPIState } = useContext(WeatherContext)\r\n\r\n  const [state, setState] = useState({\r\n    LOCATION: '',\r\n    UNIT: 'metric'\r\n  })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(state)\r\n    setAPIState({\r\n      ...APIState,\r\n      LOCATION: state.LOCATION\r\n    })\r\n\r\n    setState({\r\n      ...state,\r\n      LOCATION: ''\r\n    })\r\n  }\r\n  const handleChange = (e) => {\r\n    setState({\r\n      ...state,\r\n      LOCATION: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleUnitChange = (e) => {\r\n    setAPIState({\r\n      ...APIState,\r\n      TEMP_UNIT: e.target.selectedOptions[0].value\r\n    })\r\n    setState({\r\n      ...state,\r\n      UNIT: e.target.selectedOptions[0].value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"GeoLocation\">\r\n      <form onSubmit={ handleSubmit }>\r\n        <input type=\"text\" placeholder=\"City Name / PIN (Example: Ajmer / 305001)\" required value={state.LOCATION} onChange={ handleChange } />\r\n      </form>\r\n      <select onChange={ handleUnitChange } defaultValue={ state.UNIT }>\r\n        <option value=\"metric\">Celsius</option>\r\n        <option value=\"imperial\">Fahrenheit</option>\r\n      </select>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GeoLocation\r\n","import React, { useContext } from 'react'\r\n\r\nimport { WeatherContext } from './WeatherContext'\r\n\r\nconst WeatherForcast = () => {\r\n\r\n  const { fetchedDataState, APIState } = useContext(WeatherContext)\r\n\r\n  return (\r\n    <div className=\"WeatherForcast\">\r\n      {  }\r\n      { fetchedDataState.ERROR === false ? (\r\n          fetchedDataState.IS_LOADING ? \"Loading...\" : (\r\n            <>\r\n              <img src={  \"http://openweathermap.org/img/wn/\"+ fetchedDataState.WEATHER_ICON +\"@2x.png\" } className=\"WeatherIcon\" alt=\"Weather Icon\" />\r\n              <div className=\"Location\">{ fetchedDataState.CITY + \", \" + fetchedDataState.NATION }</div>\r\n              <div className=\"AvgTemprature\">{ fetchedDataState.AVG_TEMP }&deg; { APIState.TEMP_UNIT === 'metric' ? ('C') : ('F') }</div>\r\n              <div className=\"Weather\">{ fetchedDataState.WEATHER }</div>\r\n              <div className=\"Wind\">Wind: { fetchedDataState.WIND_SPEED } { APIState.TEMP_UNIT === 'metric' ? ('meter/sec') : ('miles/hour') } in { fetchedDataState.WIND_DIR } </div>\r\n              <div className=\"HumPre\">Humidity: { fetchedDataState.HUMIDITY }% | Pressure: { fetchedDataState.PRESSURE } hPa </div>\r\n            </>\r\n          )\r\n      ) : (\r\n        <div className=\"Error\">Error: Searched City Not Found!</div>\r\n      ) }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeatherForcast\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"Footer\">\r\n      &copy; Vaibhav Acharya\r\n      <br />\r\n      Data by openweathermap.org\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\n\nimport GeoLocation from './GeoLocation'\nimport WeatherForcast from './WeatherForcast'\nimport Footer from './Footer'\n\nimport './App.css';\nimport i1 from './Images/1.jpg'\nimport i2 from './Images/2.jpg'\nimport i3 from './Images/3.jpg'\nimport i4 from './Images/4.jpg'\n\nlet bgImg = '';\n\nswitch( Math.round(Math.random() * 4) ) {\n  case 1: bgImg = i1\n  break;\n  case 2: bgImg = i2\n  break;\n  case 3: bgImg = i3\n  break;\n  case 4: bgImg = i4\n  break;\n  default: bgImg = i1\n  break;\n}\n\nconst App = () => {\n  return (\n    <div className=\"App\" style={{\n      backgroundImage: `url(${bgImg})`\n    }}>\n      <GeoLocation />\n      <WeatherForcast />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport WeatherContextProvider from './WeatherContext'\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<WeatherContextProvider><App /></WeatherContextProvider>, document.getElementById('root'));\n"],"sourceRoot":""}